package controllers;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import model.CommonBean;
import model.ExpectedArrivals;
import model.YogaBuildingRoom;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

import service.AccomodationService;
import validators.AccomodationValidator;

@Controller
@SessionAttributes("commonBean")
@Transactional
public class AccomodationController extends ManagementControllerSupport {
	List<CommonBean> arrivalsList = new ArrayList<CommonBean>();
    @Autowired
    private AccomodationValidator accomodationValidator;
    
    @Autowired
	private AccomodationService accomodationService;

    @RequestMapping("/accomodation/index.htm")
    public String showForm(HttpSession session, Map<String, Object> model) {
        loadCommonData(session, model);

        return "/management/index";
    }

    @RequestMapping(value = "/accomodation/next.htm", method = RequestMethod.POST)
    public String next(HttpSession session, @ModelAttribute("commonBean") CommonBean commonBean, BindingResult errors, Map<String, Object> model) {
        accomodationValidator.validate(errors);

        if (errors.hasErrors()) {
            return showForm(session, model);
        }
        loadCommonData(session, model);
         accomodationService.saveOrUpdate(commonBean);
        return "redirect:details.htm";
    }

    @RequestMapping("/accomodation/details.htm")
    public String showDetails(HttpSession session,@ModelAttribute("commonBean") CommonBean commonBean, SessionStatus status, Map<String, Object> model) {
        loadCommonData(session, model);
        model.put("commonBean", commonBean);
        List<ExpectedArrivals> arrivalsList = accomodationService.getArrivalsList();
        List<YogaBuildingRoom> availableRoomList = accomodationService.getAvailableRoom();
        model.put("arrivalsList", arrivalsList);
        model.put("availableRoomList",availableRoomList);
        return "/management/arrivalsDetails";
    }
    @RequestMapping("/accomodation/save.htm")
    public String save(@ModelAttribute("commonBean") CommonBean commonBean,
    		           SessionStatus status,Map<String, Object> model  ) {
    	
    	Long arrivalId = Long.parseLong(commonBean.getRadioArr());
    	Long buildingRoomId = Long.parseLong(commonBean.getRadioRoom());
    	accomodationService.updateBuildingRooms(arrivalId, buildingRoomId);
		return "redirect:details.htm";
    	
    }
    

    @RequestMapping(value = "/accomodation/save.htm", params = "more")
    public String cancel(SessionStatus status) {
       
        return "redirect:index.htm";
    }

    @InitBinder
    public void bindConverters(WebDataBinder binder) {
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        format.setLenient(false);
        binder.registerCustomEditor(Date.class, new CustomDateEditor(format, true));
    }

}
